name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build - ${{ matrix.platform.release_for }}
    strategy:
      matrix:
        platform:
          - release_for: Linux - x86_64
            os: ubuntu-latest
            bin: scurl
            target: x86_64-unknown-linux-gnu
            command: build

          - release_for: Windows - x86_64
            os: windows-latest
            bin: scurl.exe
            target: x86_64-pc-windows-msvc
            command: build

          - release_for: Windows - arm64
            os: windows-latest
            bin: scurl.exe
            target: aarch64-pc-windows-msvc
            command: build

          - release_for: MacOS - x86_64
            os: macOS-latest
            bin: scurl
            target: x86_64-aaple-darwin
            command: build

          - release_for: MacOS - Apple Silicon
            os: macOS-latest
            bin: scurl
            target: aarch64-apple-darwin
            command: build
            
    runs-on: ${{ matrix.platform.os }}
    steps:
    - uses: Swatinem/rust-cache@v2
    - uses: actions/checkout@v3
    - name: Build binary
      uses: houseabsolute/actions-rust-cross@v0
      with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: "--release"
          strip: true
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.platform.release_for }}
        path: target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}

  
  build_selfhosted:
    runs-on: self-hosted

    steps:
    - uses: Swatinem/rust-cache@v2
    - uses: actions/checkout@v3
    - name: Build binary
      run: cargo build --release
    - uses: actions/upload-artifact@v3
      with:
        name: Linux arm64
        path: target/release/scurl
      
  
